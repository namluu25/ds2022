# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import kv_pb2 as kv__pb2


class ClientStub(object):
    """Used by the client to connect to a gRPC service.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Get = channel.unary_unary(
                '/kv.Client/Get',
                request_serializer=kv__pb2.GetKey.SerializeToString,
                response_deserializer=kv__pb2.GetReply.FromString,
                )
        self.Set = channel.unary_unary(
                '/kv.Client/Set',
                request_serializer=kv__pb2.SetKey.SerializeToString,
                response_deserializer=kv__pb2.SetReply.FromString,
                )
        self.List = channel.unary_unary(
                '/kv.Client/List',
                request_serializer=kv__pb2.Void.SerializeToString,
                response_deserializer=kv__pb2.StoreReply.FromString,
                )
        self.RegisterWithPeer = channel.unary_unary(
                '/kv.Client/RegisterWithPeer',
                request_serializer=kv__pb2.IP.SerializeToString,
                response_deserializer=kv__pb2.StoreReply.FromString,
                )


class ClientServicer(object):
    """Used by the server to implement a gRPC service.
    """

    def Get(self, request, context):
        """Retrieves a key from a server.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Set(self, request, context):
        """Set a key on a server.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def List(self, request, context):
        """List all the keys defined on a server.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RegisterWithPeer(self, request, context):
        """Registers a new server with a peer.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ClientServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Get': grpc.unary_unary_rpc_method_handler(
                    servicer.Get,
                    request_deserializer=kv__pb2.GetKey.FromString,
                    response_serializer=kv__pb2.GetReply.SerializeToString,
            ),
            'Set': grpc.unary_unary_rpc_method_handler(
                    servicer.Set,
                    request_deserializer=kv__pb2.SetKey.FromString,
                    response_serializer=kv__pb2.SetReply.SerializeToString,
            ),
            'List': grpc.unary_unary_rpc_method_handler(
                    servicer.List,
                    request_deserializer=kv__pb2.Void.FromString,
                    response_serializer=kv__pb2.StoreReply.SerializeToString,
            ),
            'RegisterWithPeer': grpc.unary_unary_rpc_method_handler(
                    servicer.RegisterWithPeer,
                    request_deserializer=kv__pb2.IP.FromString,
                    response_serializer=kv__pb2.StoreReply.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'kv.Client', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Client(object):
    """The client service definition.
    """

    @staticmethod
    def Get(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/kv.Client/Get',
            kv__pb2.GetKey.SerializeToString,
            kv__pb2.GetReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Set(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/kv.Client/Set',
            kv__pb2.SetKey.SerializeToString,
            kv__pb2.SetReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def List(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/kv.Client/List',
            kv__pb2.Void.SerializeToString,
            kv__pb2.StoreReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RegisterWithPeer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/kv.Client/RegisterWithPeer',
            kv__pb2.IP.SerializeToString,
            kv__pb2.StoreReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
